{"ast":null,"code":"import { firebaseAuth, googleProvider, facebookProvider } from \"../firebase\";\nexport var firebaseAuthKey = \"firebaseAuthInProgress\";\nexport var appTokenKey = \"appToken\"; // export function loginWithGoogle() {\n//     return firebaseAuth().signInWithRedirect(googleProvider);\n// }\n\nexport function loginWithFacebook() {\n  return firebaseAuth().signInWithRedirect(facebookProvider);\n}\nexport function loginWithLinkedIn() {} // function authenticate(promise) {\n//     return promise\n//         .then(function (result) {\n//             // login with your app with result object to get accessToken (token)\n//             // localStorage.save(token);\n//             var token = result.credential.accessToken;\n//             var user = result.user;\n//             console.log(\"login happened with firebase, \", JSON.stringify(user));\n//             localStorage.setItem(\"firebaseUser\", JSON.stringify(result));\n//             return Promise.resolve(result);\n//         }).catch(function(error){\n//             var errorCode = error.code;\n//             var errorMessage = error.message;\n//             // The email of the user's account used.\n//             var email = error.email;\n//             // The firebase.auth.AuthCredential type that was used.\n//             var credential = error.credential;\n//             alert(\"failed firebase login\" + error);\n//             return Promise.reject(\"err\");\n//         });\n// }\n// function loginWithFirebase(provider) {\n//     return firebaseAuth().signInWithRedirect(provider);\n//     /*\n//      firebaseAuth().signInWithPopup(provider).then(function (result) {\n//      // This gives you a Google Access Token. You can use it to access the Google API.\n//      const token = result.credential.accessToken;\n//      // The signed-in user info.\n//      const user = result.user;\n//      // ...\n//      console.log(\"google login success. token=\", token, \",user=\", JSON.stringify(user));\n//      }).catch(function (error) {\n//      // Handle Errors here.\n//      const errorCode = error.code;\n//      const errorMessage = error.message;\n//      // The email of the user's account used.\n//      const email = error.email;\n//      // The firebase.auth.AuthCredential type that was used.\n//      const credential = error.credential;\n//      // ...\n//      console.log(\"google login failed.reason=\", errorMessage);\n//      });\n//      */\n// }\n\nexport var doCreateUserWithEmailAndPassword = function doCreateUserWithEmailAndPassword(email, password) {\n  return firebaseAuth().createUserWithEmailAndPassword(email, password);\n};\nexport var doSignInWithEmailAndPassword = function doSignInWithEmailAndPassword(email, password) {\n  return firebaseAuth().signInWithEmailAndPassword(email, password);\n};\nexport var doSignInWithGoogle = function doSignInWithGoogle() {\n  return firebaseAuth().signInWithPopup(googleProvider);\n};\nexport var doSignInWithFacebook = function doSignInWithFacebook() {\n  return firebaseAuth().signInWithPopup(facebookProvider);\n};\nexport var doSignOut = function doSignOut() {\n  return firebaseAuth().signOut();\n};\nexport var onAuthStateChanged = function onAuthStateChanged(callback) {\n  return firebaseAuth().onAuthStateChanged(callback);\n};","map":{"version":3,"sources":["D:\\MyWorkspace\\Portfolio\\portfolio-app\\src\\helpers\\auth.js"],"names":["firebaseAuth","googleProvider","facebookProvider","firebaseAuthKey","appTokenKey","loginWithFacebook","signInWithRedirect","loginWithLinkedIn","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","doSignInWithFacebook","doSignOut","signOut","onAuthStateChanged","callback"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,gBAAvC,QAA+D,aAA/D;AAEA,OAAO,IAAMC,eAAe,GAAG,wBAAxB;AACP,OAAO,IAAMC,WAAW,GAAG,UAApB,C,CAEP;AACA;AACA;;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAChC,SAAOL,YAAY,GAAGM,kBAAf,CAAkCJ,gBAAlC,CAAP;AACH;AAED,OAAO,SAASK,iBAAT,GAA6B,CACnC,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACC,KAAD,EAAQC,QAAR;AAAA,SAC5CV,YAAY,GAAGW,8BAAf,CAA8CF,KAA9C,EAAqDC,QAArD,CAD4C;AAAA,CAAzC;AAGP,OAAO,IAAOE,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACH,KAAD,EAAQC,QAAR;AAAA,SACzCV,YAAY,GAAGa,0BAAf,CAA0CJ,KAA1C,EAAiDC,QAAjD,CADyC;AAAA,CAAtC;AAGP,OAAO,IAAOI,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAC/Bd,YAAY,GAAGe,eAAf,CAA+Bd,cAA/B,CAD+B;AAAA,CAA5B;AAGP,OAAO,IAAMe,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAChChB,YAAY,GAAGe,eAAf,CAA+Bb,gBAA/B,CADgC;AAAA,CAA7B;AAGP,OAAO,IAAMe,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMjB,YAAY,GAAGkB,OAAf,EAAN;AAAA,CAAlB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAcpB,YAAY,GAAGmB,kBAAf,CAAkCC,QAAlC,CAAd;AAAA,CAA3B","sourcesContent":["import { firebaseAuth, googleProvider, facebookProvider } from \"../firebase\";\r\n\r\nexport const firebaseAuthKey = \"firebaseAuthInProgress\";\r\nexport const appTokenKey = \"appToken\";\r\n\r\n// export function loginWithGoogle() {\r\n//     return firebaseAuth().signInWithRedirect(googleProvider);\r\n// }\r\n\r\nexport function loginWithFacebook() {\r\n    return firebaseAuth().signInWithRedirect(facebookProvider);\r\n}\r\n\r\nexport function loginWithLinkedIn() {\r\n}\r\n\r\n\r\n// function authenticate(promise) {\r\n//     return promise\r\n//         .then(function (result) {\r\n//             // login with your app with result object to get accessToken (token)\r\n//             // localStorage.save(token);\r\n//             var token = result.credential.accessToken;\r\n//             var user = result.user;\r\n//             console.log(\"login happened with firebase, \", JSON.stringify(user));\r\n//             localStorage.setItem(\"firebaseUser\", JSON.stringify(result));\r\n//             return Promise.resolve(result);\r\n//         }).catch(function(error){\r\n//             var errorCode = error.code;\r\n//             var errorMessage = error.message;\r\n//             // The email of the user's account used.\r\n//             var email = error.email;\r\n//             // The firebase.auth.AuthCredential type that was used.\r\n//             var credential = error.credential;\r\n//             alert(\"failed firebase login\" + error);\r\n//             return Promise.reject(\"err\");\r\n//         });\r\n// }\r\n\r\n// function loginWithFirebase(provider) {\r\n//     return firebaseAuth().signInWithRedirect(provider);\r\n//     /*\r\n//      firebaseAuth().signInWithPopup(provider).then(function (result) {\r\n//      // This gives you a Google Access Token. You can use it to access the Google API.\r\n//      const token = result.credential.accessToken;\r\n//      // The signed-in user info.\r\n//      const user = result.user;\r\n//      // ...\r\n//      console.log(\"google login success. token=\", token, \",user=\", JSON.stringify(user));\r\n//      }).catch(function (error) {\r\n//      // Handle Errors here.\r\n//      const errorCode = error.code;\r\n//      const errorMessage = error.message;\r\n//      // The email of the user's account used.\r\n//      const email = error.email;\r\n//      // The firebase.auth.AuthCredential type that was used.\r\n//      const credential = error.credential;\r\n//      // ...\r\n//      console.log(\"google login failed.reason=\", errorMessage);\r\n//      });\r\n//      */\r\n// }\r\n\r\n\r\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\r\n    firebaseAuth().createUserWithEmailAndPassword(email, password);\r\n\r\nexport const  doSignInWithEmailAndPassword = (email, password) =>\r\n    firebaseAuth().signInWithEmailAndPassword(email, password);\r\n\r\nexport const  doSignInWithGoogle = () =>\r\n    firebaseAuth().signInWithPopup(googleProvider);\r\n\r\nexport const doSignInWithFacebook = () =>\r\n    firebaseAuth().signInWithPopup(facebookProvider);\r\n\r\nexport const doSignOut = () => firebaseAuth().signOut();\r\n\r\nexport const onAuthStateChanged = (callback) => firebaseAuth().onAuthStateChanged(callback);\r\n"]},"metadata":{},"sourceType":"module"}