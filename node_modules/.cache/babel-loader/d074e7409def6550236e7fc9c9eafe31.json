{"ast":null,"code":"import _defineProperty from \"D:\\\\MyWorkspace\\\\Portfolio\\\\portfolio-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\MyWorkspace\\\\Portfolio\\\\portfolio-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MyWorkspace\\\\Portfolio\\\\portfolio-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MyWorkspace\\\\Portfolio\\\\portfolio-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MyWorkspace\\\\Portfolio\\\\portfolio-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MyWorkspace\\\\Portfolio\\\\portfolio-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\MyWorkspace\\\\Portfolio\\\\portfolio-app\\\\src\\\\Components\\\\UserLogin\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; // import PropTypes from 'prop-types';\n// import classNames from 'classnames';\n// import { withStyles } from '@material-ui/core/styles';\n// import MenuItem from '@material-ui/core/MenuItem';\n\nimport { TextField, Button, InputAdornment, IconButton } from '@material-ui/core/';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport OtherLogins from './OtherLogins';\nimport classes from './Login.css'; // import './Login.css';\n\nimport { doSignInWithEmailAndPassword, firebaseAuthKey, appTokenKey } from \"../../helpers/auth\";\nimport { firebaseAuth } from \"../../firebase\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: '',\n      error: null,\n      showPassword: false\n    };\n\n    _this.handleClickShowPassword = function () {\n      _this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    };\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      doSignInWithEmailAndPassword(email, password).then(function (user) {\n        _this.props.history.push('/');\n\n        _this.setState({\n          error: null\n        });\n      }).catch(function (error) {\n        _this.setState({\n          error: error\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      firebaseAuth().onAuthStateChanged(function (user) {\n        // console.log('onAuthStateChanged');\n        if (user) {\n          console.log(\"User signed in: \", JSON.stringify(user));\n          localStorage.removeItem(firebaseAuthKey); // here you could authenticate with you web server to get the\n          // application specific token so that you do not have to\n          // authenticate with firebase every time a user logs in\n\n          localStorage.setItem(appTokenKey, user.uid); // store the token\n\n          _this2.props.history.push(\"/create-profile\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var error = this.state.error;\n      return React.createElement(\"div\", {\n        className: classes.FormContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.LoginFormContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.LoginForm,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        className: classes.FormItem,\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.email,\n        onChange: this.handleChange('email'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        className: classes.FormItem,\n        variant: \"outlined\",\n        type: this.state.showPassword ? 'text' : 'password',\n        label: \"Password\",\n        value: this.state.password,\n        onChange: this.handleChange('password'),\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.Button + ' ' + classes.FormItem,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Login\"), error ? React.createElement(\"p\", {\n        className: classes.Error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, error.message) : null, React.createElement(\"p\", {\n        className: classes.Register,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Opps...don't have any account yet!\", React.createElement(Link, {\n        className: classes.RegisterLink,\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"REGISTER HERE\")))), React.createElement(\"div\", {\n        className: classes.LoginDivider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.Bar + ' ' + classes.BarTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: classes.LoginOr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"OR\"), React.createElement(\"div\", {\n        className: classes.Bar + ' ' + classes.BarBottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(OtherLogins, {\n        handleGoogleLogin: this.handleGoogleLogin,\n        handleFacebookLogin: this.handleFacebookLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default withRouter(Login);","map":{"version":3,"sources":["D:\\MyWorkspace\\Portfolio\\portfolio-app\\src\\Components\\UserLogin\\Login.js"],"names":["React","Component","Link","withRouter","TextField","Button","InputAdornment","IconButton","Visibility","VisibilityOff","OtherLogins","classes","doSignInWithEmailAndPassword","firebaseAuthKey","appTokenKey","firebaseAuth","Login","state","email","password","error","showPassword","handleClickShowPassword","setState","handleChange","prop","event","target","value","handleSubmit","preventDefault","then","user","props","history","push","catch","onAuthStateChanged","console","log","JSON","stringify","localStorage","removeItem","setItem","uid","FormContainer","LoginFormContainer","LoginForm","FormItem","endAdornment","Error","message","Register","RegisterLink","LoginDivider","Bar","BarTop","LoginOr","BarBottom","handleGoogleLogin","handleFacebookLogin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n// import classNames from 'classnames';\r\n// import { withStyles } from '@material-ui/core/styles';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\nimport { TextField, Button, InputAdornment, IconButton } from '@material-ui/core/';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport OtherLogins from './OtherLogins';\r\nimport classes from './Login.css';\r\n// import './Login.css';\r\n\r\nimport { doSignInWithEmailAndPassword, firebaseAuthKey, appTokenKey } from \"../../helpers/auth\";\r\nimport { firebaseAuth } from \"../../firebase\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n    showPassword: false\r\n  };\r\n\r\n  handleClickShowPassword = () => {\r\n    this.setState(state => ({ showPassword: !state.showPassword }));\r\n  };\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    doSignInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        this.props.history.push('/');\r\n        this.setState({ error: null });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: error });\r\n      });\r\n  };\r\n\r\n  componentWillMount() {\r\n    firebaseAuth().onAuthStateChanged(user => {\r\n      // console.log('onAuthStateChanged');\r\n      if (user) {\r\n        console.log(\"User signed in: \", JSON.stringify(user));\r\n\r\n        localStorage.removeItem(firebaseAuthKey);\r\n\r\n        // here you could authenticate with you web server to get the\r\n        // application specific token so that you do not have to\r\n        // authenticate with firebase every time a user logs in\r\n        localStorage.setItem(appTokenKey, user.uid); // store the token\r\n\r\n        this.props.history.push(\"/create-profile\")\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var { error } = this.state;\r\n\r\n    return (\r\n      <div className={classes.FormContainer}>\r\n        <div className={classes.LoginFormContainer}>\r\n          <form className={classes.LoginForm} autoComplete=\"off\">\r\n            <TextField\r\n              className={classes.FormItem}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange('email')}\r\n              required\r\n            />\r\n\r\n            <TextField\r\n              required\r\n              className={classes.FormItem}\r\n              variant=\"outlined\"\r\n              type={this.state.showPassword ? 'text' : 'password'}\r\n              label=\"Password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"Toggle password visibility\"\r\n                      onClick={this.handleClickShowPassword}\r\n                    >\r\n                      {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.Button + ' ' + classes.FormItem}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Login\r\n      </Button>\r\n            {error ? (\r\n              <p className={classes.Error}>\r\n                {error.message}\r\n              </p>\r\n            ) : null}\r\n            <p className={classes.Register}>Opps...don't have any account yet!\r\n        <Link className={classes.RegisterLink} to=\"/register\" >REGISTER HERE</Link>\r\n            </p>\r\n          </form>\r\n        </div>\r\n        <div className={classes.LoginDivider}>\r\n          <div className={classes.Bar + ' ' + classes.BarTop}></div>\r\n          <span className={classes.LoginOr}>OR</span>\r\n          <div className={classes.Bar + ' ' + classes.BarBottom}></div>\r\n        </div>\r\n        <OtherLogins \r\n          handleGoogleLogin={this.handleGoogleLogin}\r\n          handleFacebookLogin={this.handleFacebookLogin}\r\n          />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}